COMPILER Coconut

CHARACTERS
    digit = '0'..'9'.

TOKENS
    number = digit{digit}.

IGNORE "\n"
PRODUCTIONS
   Coconut
   = basicBlock
     {
        basicBlock
     }.

   basicBlock
   = instr ";"
     {
       instr ";"
     }.

   instr			(. int n1, n2; String str; .)
   = value <out n1>
     {
       op <out str> value <out n2>	(. astGenerator.createBinaryInstruction(str, n1, n2); .)
     }.

   op <out String o>	(. o = null; .)
   =  ( arithOp <out o> | shiftOp <out o> )
   .

   arithOp <out String o>
   = ( '+' | '-' | '*' | '%' | '/' )  (. o = t.val; .)
   .

   shiftOp <out String o>
   = ( "<<" | ">>" )		(. o = t.val; .)
   .

   value <out int n>   (. n = 0; .)
   = ['+'] number      (. n = Integer.parseInt(t.val); .)
    | '-' number       (. n = Integer.parseInt(t.val) * -1; .)
    .

END Coconut.
